version: '3.8'

x-common-variables: &common-variables
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_USER_KEY}
  DB_KEY: ${DB_USER_SECRET}
  DB_PORT: ${DB_PORT}

services:
  api:
      container_name: ${PROJECT_NAME}_api
      build:
        dockerfile: Dockerfile
        context: "./src"
      restart: always
      ports:
        - ${API_PORT}:${API_PORT}
      environment:
        <<: *common-variables
        COINKEY: ${COINKEY}
  
  stellarpostgres:
    build:               ./postgres-docker
    container_name:      stellar-postgres
    restart:             unless-stopped
    volumes:
      - ~/stellar/node/postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_USER:     stellar
      POSTGRES_DB:       coredb
      POSTGRES_PASSWORD: password
    networks:
      - default

  stellarcore:
    build:               ./core-docker
    container_name:      stellar-core
    volumes:
      - ~/stellar/node/core:/opt/stellar
    restart:             unless-stopped
    depends_on:
      - stellarpostgres
    environment:
      POSTGRES_USER:     stellar
      POSTGRES_PASSWORD: password
      TESTNET:           1
      CORE_DB_DSN:       "postgresql://dbname=coredb host=stellarpostgres user=stellar password=password sslmode=disable"
    ports:
      - "11625:11625"
    networks:
      - default

  stellarhorizon:
    build:               ./horizon-docker
    container_name:      stellar-horizon
    volumes:
      - ~/stellar/node/horizon:/opt/stellar
    restart:             unless-stopped
    depends_on:
      - stellarpostgres
      - stellarcore
    environment:
      POSTGRES_USER:     stellar
      POSTGRES_PASSWORD: password
      TESTNET:           1
      CORE_DB_DSN:       "postgres://stellar:password@stellarpostgres/coredb?sslmode=disable"
      HORIZON_DB_DSN:    "postgres://stellar:password@stellarpostgres/horizondb?sslmode=disable"
    ports:
      - "8000:8000"
    networks:
      - default
